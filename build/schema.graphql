enum InteractionType {
  ThumbsUp
  ThumbsDown
}

enum ProposalStatus {
  Pending
  Approved
  Rejected
}

type Company @entity {
  id: ID!
  wallet: Bytes! 
  reputation: BigInt! 
  proposals: [Proposal!] @derivedFrom(field: "company")
  posts: [Post!] @derivedFrom(field: "company") 
  creators: [Creator!] @derivedFrom(field: "companies")
}

type Creator @entity {
  id: ID!
  wallet: Bytes! 
  reputation: BigInt! 
  proposals: [Proposal!] @derivedFrom(field: "targetCreator")
  companies: [Company!]
  posts: [Post!] @derivedFrom(field: "targetCreator")
  gainedPayments: [PaymentTransferred!] @derivedFrom(field: "creator") 
}

type Proposal @entity {
  id: ID!
  company: Company!
  targetCreator: Creator!
  adHash: String! 
  paymentOffer: BigInt! 
  status: ProposalStatus! 
  createdAt: BigInt!
  updatedAt: BigInt!
}

type AdContent @entity {
  id: ID!
  adHash: String! 
  content: String! 
  proposal: Proposal!
  targetCreator: String!
  company: String!
  status: ProposalStatus!
} 

type Post @entity {
  id: ID!
  proposal: Proposal!
  thumbsUp: BigInt! 
  thumbsDown: BigInt! 
  interactions: [PostInteraction!] @derivedFrom(field: "post") 
  targetCreator: Creator!
  company: Company!
  status: String! 
  createdAt: BigInt!
}

type PostInteraction @entity {
  id: ID!
  post: Post!
  interactionType: InteractionType!
  user: User! 
  createdAt: BigInt!
}

type InteractionThumbsUp @entity(timeseries: true) {
  id: Int8!
  timestamp: Int8!
  post: Post!
}
type InteractionThumbsDown @entity(timeseries: true) {
  id: Int8!
  timestamp: Int8!
  post: Post!
}

type ThumbsUpStat @aggregation(intervals: ["hour", "day"], source: "InteractionThumbsUp") {
  id: Int8!
  timestamp: Int8!
  post: Post! 
  count: Int8! @aggregate(fn: "count",cumulative: true)
}

type ThumbsDownStat @aggregation(intervals: ["hour", "day"], source: "InteractionThumbsDown") {
  id: Int8!
  timestamp: Int8!
  post: Post! 
  count: Int8! @aggregate(fn: "count",cumulative: true)
}

type PostTime @entity(timeseries: true) {
  id: Int8!
  timestamp: Int8!
  post: Post!
}


type PostStat @aggregation(intervals: ["hour", "day"], source: "PostTime") {
  id: Int8!
  timestamp: Int8!
  post: Post!
  countPosts: Int! @aggregate(fn: "count", cumulative: true)
}

type User @entity {
  id: ID! 
  interactions: [PostInteraction!]! @derivedFrom(field: "user")
}

type PostAnalytic @entity {
  id: ID!
  post: Post! @relation
  totalInteractions: BigInt! 
  engagementRate: BigDecimal!
}


type PaymentTransferred @entity {
  id: ID!
  creator: Creator! 
  amount: BigInt! 
}

