// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class CompanyRegistered extends ethereum.Event {
  get params(): CompanyRegistered__Params {
    return new CompanyRegistered__Params(this);
  }
}

export class CompanyRegistered__Params {
  _event: CompanyRegistered;

  constructor(event: CompanyRegistered) {
    this._event = event;
  }

  get company(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get reputation(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class CreatorRegistered extends ethereum.Event {
  get params(): CreatorRegistered__Params {
    return new CreatorRegistered__Params(this);
  }
}

export class CreatorRegistered__Params {
  _event: CreatorRegistered;

  constructor(event: CreatorRegistered) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get reputation(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class PaymentTransferred extends ethereum.Event {
  get params(): PaymentTransferred__Params {
    return new PaymentTransferred__Params(this);
  }
}

export class PaymentTransferred__Params {
  _event: PaymentTransferred;

  constructor(event: PaymentTransferred) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class PostInteraction extends ethereum.Event {
  get params(): PostInteraction__Params {
    return new PostInteraction__Params(this);
  }
}

export class PostInteraction__Params {
  _event: PostInteraction;

  constructor(event: PostInteraction) {
    this._event = event;
  }

  get postId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get interactionType(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get user(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class ProposalApproved extends ethereum.Event {
  get params(): ProposalApproved__Params {
    return new ProposalApproved__Params(this);
  }
}

export class ProposalApproved__Params {
  _event: ProposalApproved;

  constructor(event: ProposalApproved) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get company(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get creator(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get companyReputation(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get creatorReputation(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get paymentAmount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class ProposalRejected extends ethereum.Event {
  get params(): ProposalRejected__Params {
    return new ProposalRejected__Params(this);
  }
}

export class ProposalRejected__Params {
  _event: ProposalRejected;

  constructor(event: ProposalRejected) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get creator(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProposalSubmitted extends ethereum.Event {
  get params(): ProposalSubmitted__Params {
    return new ProposalSubmitted__Params(this);
  }
}

export class ProposalSubmitted__Params {
  _event: ProposalSubmitted;

  constructor(event: ProposalSubmitted) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get company(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get targetCreator(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get adHash(): string {
    return this._event.parameters[3].value.toString();
  }

  get paymentOffer(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class AdContract__companiesResult {
  value0: Address;
  value1: boolean;
  value2: BigInt;

  constructor(value0: Address, value1: boolean, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getWallet(): Address {
    return this.value0;
  }

  getIsRegistered(): boolean {
    return this.value1;
  }

  getReputation(): BigInt {
    return this.value2;
  }
}

export class AdContract__creatorsResult {
  value0: Address;
  value1: boolean;
  value2: BigInt;

  constructor(value0: Address, value1: boolean, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getWallet(): Address {
    return this.value0;
  }

  getIsRegistered(): boolean {
    return this.value1;
  }

  getReputation(): BigInt {
    return this.value2;
  }
}

export class AdContract__proposalsResult {
  value0: BigInt;
  value1: Address;
  value2: Address;
  value3: string;
  value4: BigInt;
  value5: boolean;

  constructor(
    value0: BigInt,
    value1: Address,
    value2: Address,
    value3: string,
    value4: BigInt,
    value5: boolean,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    return map;
  }

  getId(): BigInt {
    return this.value0;
  }

  getCompany(): Address {
    return this.value1;
  }

  getTargetCreator(): Address {
    return this.value2;
  }

  getAdHash(): string {
    return this.value3;
  }

  getPaymentOffer(): BigInt {
    return this.value4;
  }

  getIsApproved(): boolean {
    return this.value5;
  }
}

export class AdContract extends ethereum.SmartContract {
  static bind(address: Address): AdContract {
    return new AdContract("AdContract", address);
  }

  companies(param0: Address): AdContract__companiesResult {
    let result = super.call(
      "companies",
      "companies(address):(address,bool,uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return new AdContract__companiesResult(
      result[0].toAddress(),
      result[1].toBoolean(),
      result[2].toBigInt(),
    );
  }

  try_companies(
    param0: Address,
  ): ethereum.CallResult<AdContract__companiesResult> {
    let result = super.tryCall(
      "companies",
      "companies(address):(address,bool,uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AdContract__companiesResult(
        value[0].toAddress(),
        value[1].toBoolean(),
        value[2].toBigInt(),
      ),
    );
  }

  creators(param0: Address): AdContract__creatorsResult {
    let result = super.call(
      "creators",
      "creators(address):(address,bool,uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return new AdContract__creatorsResult(
      result[0].toAddress(),
      result[1].toBoolean(),
      result[2].toBigInt(),
    );
  }

  try_creators(
    param0: Address,
  ): ethereum.CallResult<AdContract__creatorsResult> {
    let result = super.tryCall(
      "creators",
      "creators(address):(address,bool,uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AdContract__creatorsResult(
        value[0].toAddress(),
        value[1].toBoolean(),
        value[2].toBigInt(),
      ),
    );
  }

  nextProposalId(): BigInt {
    let result = super.call("nextProposalId", "nextProposalId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_nextProposalId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "nextProposalId",
      "nextProposalId():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  proposals(param0: BigInt): AdContract__proposalsResult {
    let result = super.call(
      "proposals",
      "proposals(uint256):(uint256,address,address,string,uint256,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return new AdContract__proposalsResult(
      result[0].toBigInt(),
      result[1].toAddress(),
      result[2].toAddress(),
      result[3].toString(),
      result[4].toBigInt(),
      result[5].toBoolean(),
    );
  }

  try_proposals(
    param0: BigInt,
  ): ethereum.CallResult<AdContract__proposalsResult> {
    let result = super.tryCall(
      "proposals",
      "proposals(uint256):(uint256,address,address,string,uint256,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AdContract__proposalsResult(
        value[0].toBigInt(),
        value[1].toAddress(),
        value[2].toAddress(),
        value[3].toString(),
        value[4].toBigInt(),
        value[5].toBoolean(),
      ),
    );
  }
}

export class ApproveProposalCall extends ethereum.Call {
  get inputs(): ApproveProposalCall__Inputs {
    return new ApproveProposalCall__Inputs(this);
  }

  get outputs(): ApproveProposalCall__Outputs {
    return new ApproveProposalCall__Outputs(this);
  }
}

export class ApproveProposalCall__Inputs {
  _call: ApproveProposalCall;

  constructor(call: ApproveProposalCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ApproveProposalCall__Outputs {
  _call: ApproveProposalCall;

  constructor(call: ApproveProposalCall) {
    this._call = call;
  }
}

export class InteractWithPostCall extends ethereum.Call {
  get inputs(): InteractWithPostCall__Inputs {
    return new InteractWithPostCall__Inputs(this);
  }

  get outputs(): InteractWithPostCall__Outputs {
    return new InteractWithPostCall__Outputs(this);
  }
}

export class InteractWithPostCall__Inputs {
  _call: InteractWithPostCall;

  constructor(call: InteractWithPostCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get interaction(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class InteractWithPostCall__Outputs {
  _call: InteractWithPostCall;

  constructor(call: InteractWithPostCall) {
    this._call = call;
  }
}

export class RegisterCompanyCall extends ethereum.Call {
  get inputs(): RegisterCompanyCall__Inputs {
    return new RegisterCompanyCall__Inputs(this);
  }

  get outputs(): RegisterCompanyCall__Outputs {
    return new RegisterCompanyCall__Outputs(this);
  }
}

export class RegisterCompanyCall__Inputs {
  _call: RegisterCompanyCall;

  constructor(call: RegisterCompanyCall) {
    this._call = call;
  }
}

export class RegisterCompanyCall__Outputs {
  _call: RegisterCompanyCall;

  constructor(call: RegisterCompanyCall) {
    this._call = call;
  }
}

export class RegisterCreatorCall extends ethereum.Call {
  get inputs(): RegisterCreatorCall__Inputs {
    return new RegisterCreatorCall__Inputs(this);
  }

  get outputs(): RegisterCreatorCall__Outputs {
    return new RegisterCreatorCall__Outputs(this);
  }
}

export class RegisterCreatorCall__Inputs {
  _call: RegisterCreatorCall;

  constructor(call: RegisterCreatorCall) {
    this._call = call;
  }
}

export class RegisterCreatorCall__Outputs {
  _call: RegisterCreatorCall;

  constructor(call: RegisterCreatorCall) {
    this._call = call;
  }
}

export class RejectProposalCall extends ethereum.Call {
  get inputs(): RejectProposalCall__Inputs {
    return new RejectProposalCall__Inputs(this);
  }

  get outputs(): RejectProposalCall__Outputs {
    return new RejectProposalCall__Outputs(this);
  }
}

export class RejectProposalCall__Inputs {
  _call: RejectProposalCall;

  constructor(call: RejectProposalCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RejectProposalCall__Outputs {
  _call: RejectProposalCall;

  constructor(call: RejectProposalCall) {
    this._call = call;
  }
}

export class SubmitProposalCall extends ethereum.Call {
  get inputs(): SubmitProposalCall__Inputs {
    return new SubmitProposalCall__Inputs(this);
  }

  get outputs(): SubmitProposalCall__Outputs {
    return new SubmitProposalCall__Outputs(this);
  }
}

export class SubmitProposalCall__Inputs {
  _call: SubmitProposalCall;

  constructor(call: SubmitProposalCall) {
    this._call = call;
  }

  get adHash(): string {
    return this._call.inputValues[0].value.toString();
  }

  get paymentOffer(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get targetCreator(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class SubmitProposalCall__Outputs {
  _call: SubmitProposalCall;

  constructor(call: SubmitProposalCall) {
    this._call = call;
  }
}
